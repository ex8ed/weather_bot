# -*- coding: utf-8 -*-
"""
–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –±–æ—Ç–∞.
–í—ã–∑—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–æ–¥—É–ª–∏.
"""
from telebot import *
from random import randint
import addIMG  # –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≥–æ—Ä–æ–¥–∞ –∏–∑ –ø–æ–∏—Å–∫–∞
import config  # —Ç–æ–∫–µ–Ω –∏ URL
import dataFind  # –ø–æ–∏—Å–∫–æ–≤—ã–π –¥–≤–∏–∂–æ–∫
import yandexReq  # –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
import checkInput  # —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
import sysMessages  # —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

# CLIENT
client = TeleBot(config.token)

# KEYBOARD
keyboard = types.InlineKeyboardMarkup()
weather_b = types.InlineKeyboardButton(text='–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É ‚òÅ',
                                       callback_data='wantweather')
help_b = types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å üÜò',
                                    callback_data='help')
keyboard.add(weather_b, help_b)


# COMMANDS:
@client.message_handler(commands=['start'])
def startMessage(message):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ.
    :param message:
    :return:
    """
    ID = message.chat.id
    client.send_message(ID, sysMessages.startMessage,
                        reply_markup=keyboard)
    pass


# CALLBACK:
@client.callback_query_handler(func=lambda call: call.data == 'help')
def sendHelp(call):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–ª–∞–≤–∏—à–µ "help".
    –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–π —Å–ø—Ä–∞–≤–∫–∏, –µ—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∫–ª–∞–≤–∏—à–∞.
    :param call:
    :return:
    """
    ID = call.message.chat.id
    client.send_message(ID, sysMessages.helpMessage,
                        reply_markup=keyboard)
    pass


@client.callback_query_handler(func=lambda call: call.data == 'wantweather')
def helloFunc(call):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∞–≤–∏—à–µ–π "wantweather".
    –í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∫–ª–∞–≤–∏—à–∞.
    :param: call
    :return:
    """
    ID = call.message.chat.id
    mess = client.send_message(ID,
                               '–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.')
    client.register_next_step_handler(mess, enterCity)
    pass


def enterCity(message):
    """
    –§—É–Ω–∫—Ü–∏—è c –≥–ª–∞–≤–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º.
    –ü–æ–ª—É—á–∞–µ—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä–µ–∫—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ
    –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ—Ç –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞
    :param: message
    :return:
    """
    ID = message.chat.id
    info = message.text
    #   info - –≥–ª–∞–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º:
    #   –í–í–ï–î–ï–ù–ù–´–ô –ì–û–†–û–î
    if checkInput.isCorrect(info):
        client.send_message(ID, '–ü–æ–Ω—è–ª, –∏—â—É –ø–æ–≥–æ–¥—É –ø–æ –≥–æ—Ä–æ–¥—É %s.' % info)
        lat, lon, isFound = dataFind.getCords(info)
        if isFound is True:
            answer = yandexReq.getForecast(lat, lon, info)
            client.send_photo(ID, addIMG.getImage(info))
            client.send_message(ID, answer,
                                reply_markup=keyboard)
        else:
            client.send_message(ID, '–£–≤—ã, —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞—à–ª–æ—Å—å. –í—ã–≤–æ–∂—É –ø–æ –ú–°–ö.')
            info = '–ú–æ—Å–∫–≤–∞'
            answer = yandexReq.getForecast(lat, lon, info)
            client.send_message(ID, answer,
                                reply_markup=keyboard)
    else:
        mess = client.send_message(ID, '–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º!')
        client.register_next_step_handler(mess, enterCity)
        return


@client.message_handler(content_types=['text'])
def thanks(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏.
    :param message:
    :return:
    """
    ID = message.chat.id
    thnx = message.text.lower()
    if checkInput.isItThanks(thnx):
        client.send_message(ID, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä')
        client.send_sticker(ID,
                            config.stickersID[randint(0, 6)])


if __name__ == "__main__":
    client.polling(none_stop=True, interval=1)
